# Generated by Django 5.0.2 on 2024-02-20 20:33

import apps.catalog.models.mixins
import apps.root.models.mixins
import contrib.wagtail.models
import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('root', '0001_initial'),
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'verbose_name': 'Каталог',
            },
            bases=(apps.catalog.models.mixins.CatalogProductsMixin, apps.root.models.mixins.CommonPagesMixin, contrib.wagtail.models.UnidecodeMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'verbose_name': 'Категория',
            },
            bases=(apps.catalog.models.mixins.CatalogProductsMixin, apps.root.models.mixins.CommonPagesMixin, contrib.wagtail.models.UnidecodeMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('section', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'АКБ'), (2, 'Аксессуар'), (3, 'Услуга')], default=1, null=True, verbose_name='Секция')),
                ('publish', models.BooleanField(default=True, verbose_name='Опубликовать на сайте')),
                ('price', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Цена (полная)')),
                ('price_segment', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Эконом'), (2, 'Эконом+'), (3, 'Стандарт'), (4, 'Стандарт+'), (5, 'Премиум'), (6, 'Премиум+')], null=True, verbose_name='Ценовой сегмент')),
                ('guarantee', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Гарантия, мес.')),
                ('description', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Описание')),
                ('capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Ёмкость, Ач')),
                ('current', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Пусковой ток, А')),
                ('polarity', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Прямая'), (2, 'Обратная')], null=True, verbose_name='Полярность')),
                ('terminal', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Стандартные'), (2, 'Тонкие'), (3, 'Универсальные')], null=True, verbose_name='Клемма')),
                ('length', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Длина, мм')),
                ('width', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Ширина, мм')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Высота, мм')),
                ('low', models.BooleanField(default=False, verbose_name='Низкий')),
                ('case_format', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Европа'), (2, 'Азия')], null=True, verbose_name='Формат корпуса')),
                ('calcium', models.BooleanField(default=False, verbose_name='Кальций-кальций')),
                ('efb', models.BooleanField(default=False, verbose_name='EFB')),
                ('agm', models.BooleanField(default=False, verbose_name='AGM')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='root.country', verbose_name='Страна')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailimages.image', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Товар',
            },
            bases=(apps.root.models.mixins.ImageMixin, apps.root.models.mixins.CommonPagesMixin, contrib.wagtail.models.UnidecodeMixin, 'wagtailcore.page'),
        ),
    ]
